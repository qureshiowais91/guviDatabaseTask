IMDB Design a DB for IMDB 
1. Movies should have multiple media(Video or Image) 
2. Movies can belong to multiple Genre 
3. Movies can have multiple reviews and Review can belong to a user 
4. Artists can have multiple skills 
5. Artist can perform multiple role in a single film



create schema guvi;
CREATE TABLE Movie (
    movie_id INT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    release_date DATE,
    duration VARCHAR(20),
    description TEXT
);

CREATE TABLE Media (
    media_id INT PRIMARY KEY,
    movie_id INT,
    media_type VARCHAR(20),
    url VARCHAR(255),
    description TEXT,
    FOREIGN KEY (movie_id) REFERENCES Movie(movie_id)
);

CREATE TABLE Genre (
    genre_id INT PRIMARY KEY,
    name VARCHAR(50)
);

CREATE TABLE Movie_Genre (
    movie_id INT,
    genre_id INT,
    PRIMARY KEY (movie_id, genre_id),
    FOREIGN KEY (movie_id) REFERENCES Movie(movie_id),
    FOREIGN KEY (genre_id) REFERENCES Genre(genre_id)
);

CREATE TABLE User (
    user_id INT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    registration_date DATE
);

CREATE TABLE Review (
    review_id INT PRIMARY KEY,
    movie_id INT,
    user_id INT,
    rating DECIMAL(3, 1),
    comment TEXT,
    review_date DATE,
    FOREIGN KEY (movie_id) REFERENCES Movie(movie_id),
    FOREIGN KEY (user_id) REFERENCES User(user_id)
);

CREATE TABLE Artist (
    artist_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    bio TEXT
);

CREATE TABLE Skill (
    skill_id INT PRIMARY KEY,
    name VARCHAR(50)
);

CREATE TABLE Roles (
    role_id INT PRIMARY KEY,
    name VARCHAR(50)
);

Create TABLE Roles_Artis_Movie(
		role_id INT,
        movies_id INT,
        artist_id INT,
        FOREIGN KEY(movies_id) REFERENCES movie(movie_id),
        FOREIGN KEY(artist_id) REFERENCES artist(artist_id)
);

CREATE TABLE Artist_SKill (
     artist_skill_id INT PRIMARY KEY,
    artist_id INT,
    skill_id INT,
    FOREIGN KEY (artist_id) REFERENCES Artist(artist_id),
    FOREIGN KEY (skill_id) REFERENCES Skill(skill_id)
);